diff --git a/xbmc/visualizations/XBMCProjectM/libprojectM/Common.hpp b/xbmc/visualizations/XBMCProjectM/libprojectM/Common.hpp
index 60cb4c16f8..fe807c1d09 100644
--- a/xbmc/visualizations/XBMCProjectM/libprojectM/Common.hpp
+++ b/xbmc/visualizations/XBMCProjectM/libprojectM/Common.hpp
@@ -57,11 +57,11 @@ extern FILE *fmemopen(void *buf, size_t len, const char *pMode);
 #endif
 			 
 #ifdef LINUX
-#define projectM_isnan isnan
+#define projectM_isnan std::isnan
 #endif
 
 #ifdef LINUX
-#define projectM_isnan isnan
+#define projectM_isnan std::isnan
 #endif
 
 #ifdef WIN32
diff --git a/xbmc/visualizations/XBMCProjectM/libprojectM/Parser.cpp b/xbmc/visualizations/XBMCProjectM/libprojectM/Parser.cpp
index f881c0ca0e..92747b028e 100644
--- a/xbmc/visualizations/XBMCProjectM/libprojectM/Parser.cpp
+++ b/xbmc/visualizations/XBMCProjectM/libprojectM/Parser.cpp
@@ -1471,7 +1471,7 @@ PerFrameEqn * Parser::parse_implicit_per_frame_eqn(std::istream &  fs, char * pa
   PerFrameEqn * per_frame_eqn;
   GenExpr * gen_expr;
 
-  if (fs == NULL)
+  if (!fs)
     return NULL;
   if (param_string == NULL)
     return NULL;
@@ -1612,7 +1612,7 @@ InitCond * Parser::parse_per_frame_init_eqn(std::istream &  fs, Preset * preset,
 
   if (preset == NULL)
     return NULL;
-  if (fs == NULL)
+  if (!fs)
     return NULL;
 
   if ((token = parseToken(fs, name)) != tEq)
@@ -1806,7 +1806,7 @@ int Parser::parse_shapecode(char * token, std::istream &  fs, Preset * preset)
   /* Null argument checks */
   if (preset == NULL)
     return PROJECTM_FAILURE;
-  if (fs == NULL)
+  if (!fs)
     return PROJECTM_FAILURE;
   if (token == NULL)
     return PROJECTM_FAILURE;
@@ -2097,7 +2097,7 @@ int Parser::parse_wave(char * token, std::istream &  fs, Preset * preset)
 
   if (token == NULL)
     return PROJECTM_FAILURE;
-  if (fs == NULL)
+  if (!fs)
     return PROJECTM_FAILURE;
   if (preset == NULL)
     return PROJECTM_FAILURE;
@@ -2283,7 +2283,7 @@ int Parser::parse_shape(char * token, std::istream &  fs, Preset * preset)
   if (token == NULL)
 
     return PROJECTM_FAILURE;
-  if (fs == NULL)
+  if (!fs)
     return PROJECTM_FAILURE;
   if (preset == NULL)
     return PROJECTM_FAILURE;
